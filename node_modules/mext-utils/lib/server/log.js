'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const getIPAdress_1 = require('./getIPAdress');

const lodash_1 = require('lodash');

const path_1 = require('path');

const hostName = require('os').hostname();

const { name: app, version = '1.0.0' } = require(path_1.join(process.cwd(), 'package.json'));

function mutiLog(msg) {
  if (lodash_1.isPlainObject(msg)) {
    for (const key in msg) {
      if (lodash_1.isError(msg[key])) {
        console.info(msg[key]);
      } else {
        console.info(`${key}:${msg[key]}`);
      }
    }
  } else {
    console.error(msg);
  }
}

exports.default = (
  msg,
  eventType = 'system',
  siteInfo,
  logIdentity = version,
  serviceId = 'mext'
) => {
  if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
    console.error(`[${eventType}]: `);
    mutiLog(msg);
    return null;
  }

  return {
    app,
    ip: getIPAdress_1.default(),
    hostName,
    timestamp: Number(new Date()),
    serviceId,
    logIdentity,
    eventType,
    level: 'ERROR',
    siteInfo,
    logDetail: lodash_1.isError(msg) ? msg.stack : msg
  };
};
