'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const React = require('react');

const fs = require('fs-extra');

const path = require('path');

const MextScript = props => {
  const {
    dev,
    map,
    error,
    manifest,
    assetPrefixs,
    cache,
    mode,
    hashName,
    router,
    crossOrigin,
    modules
  } = props;
  const cross = {};

  if (crossOrigin) {
    cross.crossOrigin = 'anonymous';
  }

  const scriptData = [];

  if (dev) {
    const commonJs = path.join(process.cwd(), 'node_modules', '.mext_dll', 'common.js');

    if (fs.existsSync(commonJs)) {
      scriptData.push(
        React.createElement(
          'script',
          Object.assign({}, cross, {
            key: '0',
            defer: true,
            src: `${assetPrefixs}common.js`
          })
        )
      );
    }
  } // 服务端渲染、browser形式的路由、未开启缓存、未发生错误

  if (mode === 'server' && router === 'browser' && !cache && !error) {
    scriptData.push(
      React.createElement('div', {
        key: '1',
        id: '__URL__',
        'data-loadable': modules.length
      })
    );
  }

  if (dev) {
    scriptData.push(
      React.createElement(
        'script',
        Object.assign({}, cross, {
          defer: true,
          key: '2',
          src: `${assetPrefixs}mext.js`
        })
      )
    );
  } else {
    const main = map.main.replace(/\.css$/, '');

    if (manifest) {
      scriptData.push(
        React.createElement('script', {
          key: '3',
          dangerouslySetInnerHTML: {
            __html: manifest
          }
        })
      );
    } else if (!hashName) {
      scriptData.push(
        React.createElement(
          'script',
          Object.assign({}, cross, {
            key: '4',
            defer: true,
            src: `${assetPrefixs}scripts/manifest.js`
          })
        )
      );
    }

    if (map['common.js']) {
      scriptData.push(
        React.createElement(
          'script',
          Object.assign({}, cross, {
            key: '5',
            defer: true,
            src: `${assetPrefixs}scripts/${map['common.js']}`
          })
        )
      );
    }

    scriptData.push(
      React.createElement(
        'script',
        Object.assign({}, cross, {
          key: '6',
          defer: true,
          src: `${assetPrefixs}scripts/${!hashName ? 'main' : main}.js`
        })
      )
    );
  }

  return React.createElement(React.Fragment, null, scriptData);
};

function Document(props) {
  return {
    head: null,
    initialState: props.mode === 'server' ? props.initialState : {},
    script: React.createElement(MextScript, Object.assign({}, props)),
    assetPrefixs: props.assetPrefixs
  };
}

exports.default = Document;
