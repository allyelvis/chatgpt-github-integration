'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
/**
 * 渲染Switch的核心组件
 */

const React = require('react');

const ManageRoute_1 = require('./render/ManageRoute');

const react_router_dom_1 = require('react-router-dom');

const context_1 = require('./context');
/**
 * 渲染每个路由组件
 */

const renderRoute = (path, childRoutes) => {
  return props => {
    return React.createElement(context_1.default.Consumer, null, value => {
      return React.createElement(ManageRoute_1.default, {
        pathname: props.location.pathname,
        consumer: value,
        rest: {
          path,
          childRoutes,
          props
        }
      });
    });
  };
};
/**
 * 递归渲染出所有的Switch组件
 */

const renderRoutes = routes => {
  return React.createElement(
    react_router_dom_1.Switch,
    null,
    routes.map((route, index) => {
      // 子路由
      const childRoutes = route.routes ? renderRoutes(route.routes) : null;
      return React.createElement(react_router_dom_1.Route, {
        key: index,
        path: route.path,
        exact: route.exact,
        strict: route.strict,
        render: renderRoute(route.path, childRoutes)
      });
    })
  );
};
/**
 * 通过shouldComponentUpdate限制，Switch只有第一次注册
 * 后面不再渲染该组件，也不再执行Switch递归
 */

class default_1 extends React.Component {
  shouldComponentUpdate() {
    return false;
  }

  render() {
    return renderRoutes(this.props.routes);
  }
}

exports.default = default_1;
