'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const forEach = require('lodash/forEach');

const isNull = require('lodash/isNull');

const isPlainObject = require('lodash/isPlainObject');

const isString = require('lodash/isString');

const isUndefined = require('lodash/isUndefined');
/**
 * a=1 => {a: 1}
 */

function string2Object(str) {
  return str.split('&').reduce((res, item) => {
    const arr = item.split('=');
    res[arr[0]] = arr[1];
    return res;
  }, {});
}
/**
 * [description]
 * @param  {[string | object]} data
 * @param  {[any]} returnObj [是否返回{}格式]
 * @return {[string | object]}
 */

function default_1(_data, returnObj) {
  let data = _data;

  if (!data) {
    return returnObj === 'object' ? {} : '';
  } // formdata

  if (!isPlainObject(data) && !isString(data)) {
    return data;
  }

  if (returnObj === 'object') {
    if (isString(data)) {
      data = string2Object(data);
    }

    return JSON.stringify(data);
  }

  if (returnObj === 'json') {
    if (isString(data)) {
      data = string2Object(data);
    }

    return JSON.stringify(data);
  } // a=1&b=2

  if (!isPlainObject(data)) {
    return data;
  } // {a: 1}

  const str = [];
  forEach(data, (v, key) => {
    let val = v;

    if (isUndefined(val) || isNull(val)) {
      val = '';
    }

    str.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
  });
  return str.join('&');
}

exports.default = default_1;
