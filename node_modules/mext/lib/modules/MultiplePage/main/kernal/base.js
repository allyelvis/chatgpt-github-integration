'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
/**
 * 初始化基础变量
 */

const React = require('react');

const react_router_config_1 = require('react-router-config');

const mext_utils_1 = require('mext-utils');

const isPlainObject = require('lodash/isPlainObject');

let exportPath = null;

if (process.env.WEB_TYPE === 'WEB_SPA') {
  exportPath = process.env.EXPORTPATH;
}

class Base extends React.Component {
  constructor(...args) {
    super(args[0], args[1]);
    this.leavePaths = [];
    this.routeIsSwitch = false;
    this.routeChanged = false;
    this.lastQuery = {};
    this.exportPath = null;
    const [Component, routes, match_routes, INITIAL_STATE] = args[2];
    const { basename } = mext_utils_1.loadParams.get();
    this.pathname = mext_utils_1.realPath(basename, mext_utils_1.pathname());

    const _search = mext_utils_1.search();

    this.updateProps = Component.updateProps;
    this.getInitialProps = Component.getInitialProps || null;
    this.routes = routes;
    this.match_routes = match_routes;
    this.lastMatchRoutes = match_routes;
    this.lastRoute = this.pathname + _search;
    this.lastTarget = {
      match_routes,
      location: {
        pathname: this.pathname,
        search: _search
      }
    };
    this.target = this.lastTarget;
    this.mext_initialState = INITIAL_STATE;
    this.emitter = mext_utils_1.emitter.getEmitter();

    if (process.env.NODE_ENV === 'development') {
      // 开发存储当前数据供热更新时使用
      window.hmr_initialState = INITIAL_STATE;
    }

    if (process.env.WEB_TYPE === 'WEB_SPA') {
      if (!isPlainObject(exportPath) && typeof exportPath === 'string') {
        try {
          exportPath = JSON.parse(exportPath);
        } catch (error) {}
      }

      if (exportPath) {
        for (let html in exportPath) {
          if (Object.prototype.hasOwnProperty.call(exportPath, html)) {
            const routes = react_router_config_1.matchRoutes(this.routes, exportPath[html]).pop();
            exportPath[html] = routes.match.path;
          }
        }

        this.exportPath = exportPath;
      }
    }
  }
}

exports.default = Base;
