'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const Exception_1 = require('mext-utils/Exception');

const search_1 = require('mext-utils/search');

const client_1 = require('mext-plugin/client');

const setMext_1 = require('../../setMext');

exports.default = async (Component, INITIAL_STATE) => {
  let mext = INITIAL_STATE.mext;

  try {
    /**
     * 初始化非路由组件的数据，即挂载在入口组件的getInitialProps方法的实现
     */
    if (Component.getInitialProps) {
      const initialPropsParams = {
        query: search_1.queryObj(),
        setMext: setMext_1.default,
        routes: [],
        route: null
      };
      await client_1.default.hooks.modifyInitialPropsCtx({
        params: initialPropsParams
      });
      const props = await Component.getInitialProps(initialPropsParams);
      INITIAL_STATE.mext = {
        ...INITIAL_STATE.mext,
        ...mext,
        ...(Array.isArray(props) ? {} : props)
      };
    } // 通过RouterSwtich绑定的回调修改数据
  } catch (err) {
    client_1.default.hooks.catchError({
      type: 'fetch',
      error: err
    });
    INITIAL_STATE.MextException = await Exception_1.default.handleError.call(null, err);
  }
};
