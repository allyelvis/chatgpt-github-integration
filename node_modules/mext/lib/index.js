'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const react_helmet_1 = require('react-helmet');

const loadParams_1 = require('mext-utils/loadParams');

const consumer_1 = require('./consumer');

const start_1 = require('./start');

const setMext_1 = require('./setMext');

const removeMext_1 = require('./removeMext');

var react_helmet_2 = require('react-helmet');

exports.Head = react_helmet_2.Helmet;

var consumer_2 = require('./consumer');

exports.Consumer = consumer_2.default;

var start_2 = require('./start');

exports.start = start_2.default;

var setMext_2 = require('./setMext');

exports.setMext = setMext_2.default;

var removeMext_2 = require('./removeMext');

exports.removeMext = removeMext_2.default;

if (process.env.RUN_ENV === 'web') {
  const basename = '';
  ('<$>__MEXT__BASENAME__<$>');
  loadParams_1.default.set({
    basename
  });
}

exports.basename = () => {
  return loadParams_1.default.get().basename;
};

const _default = {
  Head: react_helmet_1.Helmet,
  start: start_1.default,
  Consumer: consumer_1.default,
  setMext: setMext_1.default,
  removeMext: removeMext_1.default,
  basename: exports.basename
}; // 需要区分服务端和客户端读取插件默认导出的资源

let _mext_plugins_ = null;

if (process.env.RUN_ENV === 'node') {
  // 服务端
  _mext_plugins_ = global.__MEXT__PLUGINS__;
} else {
  /**
   * 客户端，babel识别到<$>__MEXT__PLUGINS__<$>，那么将对其注入下面插件代码
   * {
   *   "mext-plugin-dva":{
   *     name: 'dva',
   *     default: require('mext-plugin-dva'),
   *     client: require('mext-plugin-dva/lib')
   *   }
   * }
   */
  ('<$>__MEXT__PLUGINS__<$>');
} // 分析插件结构，并导出资源

if (_mext_plugins_) {
  Object.values(_mext_plugins_).forEach(plugin => {
    const api = plugin.default;
    const name = plugin.name;

    if (api) {
      _default[name] = api.default || api;
      exports[name] = api.default || api;
    }
  });
}

exports.default = _default;
