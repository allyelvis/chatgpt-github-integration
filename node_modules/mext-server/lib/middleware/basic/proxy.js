'use strict';
/**
 * 代理中间件
 */

Object.defineProperty(exports, '__esModule', {
  value: true
});

const httpProxy = require('http-proxy-middleware');

const regxp = require('path-to-regexp');

const k2c = require('koa2-connect');

const common_1 = require('../common');

function default_1() {
  /** 远程服务数据 */
  if (this.isProxy) {
    const self = this;
    return async function ProxyMiddleware(ctx, next) {
      const { path } = ctx;
      let proxy = false;
      /**
       * dev环境动态获取targets
       */

      const config = self.config.toObject();
      const { customs, ...rests } = config.proxyTable;

      if (customs && Array.isArray(customs)) {
        let i = 0;

        while (i < customs.length) {
          const custom = customs[i];

          if (typeof custom.filter === 'function' && typeof custom.options === 'object') {
            proxy = true;
            await k2c(httpProxy(custom.filter, custom.options))(ctx, next);
          }

          i++;
        }
      }

      for (const route in rests) {
        if (regxp.pathToRegexp(route).test(path) || new RegExp(`^${route}`).test(path)) {
          proxy = true;
          await k2c(httpProxy(path, rests[route]))(ctx, next);
          break;
        }
      }

      if (proxy === false) {
        await next();
      }
    };
  }

  return common_1.default;
}

exports.default = default_1;
