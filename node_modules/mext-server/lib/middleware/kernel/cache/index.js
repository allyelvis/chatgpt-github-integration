'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const _ = require('lodash');

const load_1 = require('./load');

const node_1 = require('mext-plugin/node');
/**
 * node缓存无数据html
 * @param {options} lruache参数
 */

let init = false;
/** 判断是否缓存，命中缓存 cache */

exports.default = () => {
  return async function CacheMiddleware(ctx, next) {
    await node_1.default.hooks.willCache({
      context: ctx
    });
    const { cache } = ctx.mext;

    if (cache) {
      if (!init) {
        init = true;

        if (typeof cache === 'object' && _.isObject(cache)) {
          load_1.default.init(cache);
        }
      }

      const logTime = Number(new Date());
      const html = load_1.default.get(ctx);

      if (html && !ctx.mext.dev) {
        ctx.cacheTime = Number(new Date()) - logTime;
        ctx.mext.html = html;
      } else {
        await next();
        load_1.default.set(ctx, ctx.mext.html);
      }
    } else {
      await next();
    }
  };
};
